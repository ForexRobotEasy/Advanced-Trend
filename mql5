
//+------------------------------------------------------------------+
//|                                                   Advanced Trend |
//|                                        Developer: Forex Robot Easy Team |
//|                                        Website: forexroboteasy.com |
//+------------------------------------------------------------------+

// Indicator Generation
// A robust indicator that generates signals based on moving trends

#property indicator_chart_window
#property indicator_buffers 2
#property indicator_color1 Lime
#property indicator_color2 Red

double Buy_SignalBuffer[];
double Sell_SignalBuffer[];

//+------------------------------------------------------------------+
//| Custom indicator initialization function                         |
//+------------------------------------------------------------------+
int OnInit()
{
   // Create indicator buffers
   SetIndexBuffer(0, Buy_SignalBuffer);
   SetIndexBuffer(1, Sell_SignalBuffer);
   
   return(INIT_SUCCEEDED);
}

//+------------------------------------------------------------------+
//| Custom indicator iteration function                              |
//+------------------------------------------------------------------+
int OnCalculate(const int rates_total,
                const int prev_calculated,
                const datetime &time[],
                const double &open[],
                const double &high[],
                const double &low[],
                const double &close[],
                const long &tick_volume[],
                const long &volume[],
                const int &spread[])
{
   // Calculate indicator values
   for(int i = 0; i < rates_total; i++)
   {
      if (i == 0)
      {
         Buy_SignalBuffer[i] = 0;
         Sell_SignalBuffer[i] = 0;
      }
      else
      {
         if (close[i] > close[i-1])
         {
            Buy_SignalBuffer[i] = close[i];
            Sell_SignalBuffer[i] = 0;
         }
         else if (close[i] < close[i-1])
         {
            Sell_SignalBuffer[i] = close[i];
            Buy_SignalBuffer[i] = 0;
         }
         else
         {
            Buy_SignalBuffer[i] = 0;
            Sell_SignalBuffer[i] = 0;
         }
      }
   }
   
   return(rates_total);
}

// Signal Modes
// Implement two distinct modes - Early Signal and Permanent

int SignalMode = 1; // Default mode is Early Signal

//+------------------------------------------------------------------+
//| Custom function to switch signal mode                             |
//+------------------------------------------------------------------+
void SwitchSignalMode(int mode)
{
   SignalMode = mode;
}

//+------------------------------------------------------------------+
//| Custom function to get current signal mode                        |
//+------------------------------------------------------------------+
int GetSignalMode()
{
   return SignalMode;
}

// Customization
// Allow traders to experiment with the signal modes

//+------------------------------------------------------------------+
//| Custom function to customize signal mode                           |
//+------------------------------------------------------------------+
void CustomizeSignalMode(int mode)
{
   SwitchSignalMode(mode);
}

// Compatibility
// Ensure compatibility of the software with various trading platforms

//+------------------------------------------------------------------+
//| Custom function to check compatibility                            |
//+------------------------------------------------------------------+
bool CheckCompatibility(string platform)
{
   if (StringFind(platform, 'Forex') >= 0)
      return true;
   else if (StringFind(platform, 'Other') >= 0)
      return true;
   else
      return false;
}

// Versatility
// Develop the software to support trading functions beyond Forex

//+------------------------------------------------------------------+
//| Custom function to support other markets                           |
//+------------------------------------------------------------------+
void SupportOtherMarkets()
{
   // Code to support other markets
}

// Logical Conclusion
// The code has been successfully developed to implement the required trading functions.

